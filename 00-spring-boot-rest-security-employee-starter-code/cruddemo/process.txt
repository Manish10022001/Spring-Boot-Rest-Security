Enable spring security:
    ->add maven dependency: spring-boot-starter-security
    -> by adding security dependency , spring boot automatically secure all endpoints for application
    ->default user name: user, and password is in console which is generated

to override default username and password
    ->application.properties
        ->spring.security.user.name = lionel
          spring.security.user.password = messi10

Basic Configuration
-> Development process
    ->Create spring security configuration(@Configuration)
    ->Add users, passwords, and roles

4.Restrict access based on roles
    ->Define a SecurityFilterChain Bean
    ->Configure Role-Based Authorization
        ->Use authorizeHttpRequests() to set access rules
        ->general syntax , use requestMatchers to restrict acces
            ->requestMatchers( << add HTTP method to match on>>, <<add path to match on>>)
                             .hasRole(<<authorized roles>>)
             note: there there are multile role then use , .hasAnyRole(<<list of authorized roles>>)
    -> return configured  securityFilterChain
        ->return http.build();